(function() {var implementors = {};
implementors["csfml_audio_sys"] = [{"text":"impl UnwindSafe for sfMusic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSoundBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSoundBufferRecorder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSoundRecorder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSoundStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfTimeSpan","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSoundStreamChunk","synthetic":true,"types":[]}];
implementors["csfml_graphics_sys"] = [{"text":"impl UnwindSafe for sfBlendMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfFloatRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfIntRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfCircleShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfConvexShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfFont","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfShader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfRectangleShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfRenderTexture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfRenderWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSprite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfTexture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfTransformable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfVertexArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfVertexBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfTransform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfFontInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlyph","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfRenderStates","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfVertex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlslBvec2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlslIvec3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlslBvec3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlslVec4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlslIvec4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlslBvec4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlslMat3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfGlslMat4","synthetic":true,"types":[]}];
implementors["csfml_system_sys"] = [{"text":"impl UnwindSafe for sfTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfClock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfThread","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfVector2i","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfVector2u","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfVector2f","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfVector3f","synthetic":true,"types":[]}];
implementors["csfml_window_sys"] = [{"text":"impl UnwindSafe for sfContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfCursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfJoystickIdentification","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfKeyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfTextEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfMouseMoveEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfMouseButtonEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfMouseWheelEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfMouseWheelScrollEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfJoystickMoveEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfJoystickButtonEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfJoystickConnectEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSizeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfTouchEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfSensorEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfVideoMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfContextSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for sfEvent","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl UnwindSafe for Bernoulli","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Open01","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenClosed01","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; UnwindSafe for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Standard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BernoulliError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UniformChar","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdRng","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThreadRng","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; UnwindSafe for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; UnwindSafe for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl UnwindSafe for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["sfml"] = [{"text":"impl UnwindSafe for Music","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; UnwindSafe for Sound&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SoundBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; !UnwindSafe for SoundStreamPlayer&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeSpan","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SoundStatus","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for SoundRecorderDriver&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SoundBufferRecorder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetDeviceError","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; UnwindSafe for CircleShape&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; UnwindSafe for ConvexShape&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConvexShapePoints","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; !UnwindSafe for CustomShape&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Font","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Glyph","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; UnwindSafe for RectangleShape&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'texture, 'shader, 'shader_texture&gt; UnwindSafe for RenderStates&lt;'texture, 'shader, 'shader_texture&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderTexture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderWindow","synthetic":true,"types":[]},{"text":"impl&lt;'texture&gt; UnwindSafe for Shader&lt;'texture&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; UnwindSafe for Sprite&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; UnwindSafe for Text&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Texture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexArray","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Vertices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for View","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Factor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Equation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vec4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IVec4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BVec4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mat3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mat4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Clock","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SfBox&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SfStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Time","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Vector2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Vector3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContextSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VideoMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Identification","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Axis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Button","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Wheel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]}];
implementors["widestring"] = [{"text":"impl&lt;C&gt; UnwindSafe for MissingNulError&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; UnwindSafe for UCStr&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; UnwindSafe for UCString&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; UnwindSafe for NulError&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromUtf32Error","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; UnwindSafe for UStr&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; UnwindSafe for UString&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()